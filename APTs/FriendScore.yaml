filename: FriendScore.py
name: FriendScore
description: ''
lang: python
initial: "def highestScore(friends):\n\t\"\"\"\n\treturn int based on popularity of\n\tdata in string list friends\n\t\"\"\"\n\t\n\t# you write code here"
problem: >-
  You want to determine the most popular person in a social network. To do

  this, you will count the number of "2-friends" that each person

  has. Person A is called a 2-friend of another person B if they are

  friends with each other or if there exists some person C who is a friend

  of both A and B. The most popular person is the person with the highest

  number of 2-friends. (There might be more than one if multiple people

  all have the maximal number of 2-friends.)


  You are given a list of Strings, <code>friends</code>, where the j-th
  character

  of the i-th element is 'Y' if person i and person j are friends, and 'N'

  otherwise. Return the number of 2-friends of the most popular person in

  this social network.
constraints: |-
  <ul>
  <LI> <code>friends</code> will contain between 1 and 50 elements, inclusive.

  <LI> Each element of <code>friends</code>
  will contain exactly N characters 'Y' or
  'N', where N is the number of elements in <code>friends</code>.


  <LI>    For each i and j,
  <code>friends[i][j]</code> will be equal to <code>friends[j][i]</code>.

  <LI> For each i,  <code>friends[i][i]</code> will be equal to 'N'.
  </ul>
examples: |-
  <ol>
  <li class="example-odd">
  <PRE>
  ["NNN",
  "NNN",
  "NNN"]

  Returns: 0

  </PRE>
  Here, there are 3 people and none of them are friends, so everybody has
  zero 2-friends.


  <li class="example-even">
  <PRE>
  ["NYY",
  "YNY",
  "YYN"]

  Returns: 2

  </PRE>
  Each person has two 2-friends.


  <li class="example-odd">
  <PRE>
  ["NYNNN",
  "YNYNN",
  "NYNYN",
  "NNYNY",
  "NNNYN"]

  Returns: 4

  </PRE>
  Persons 0 and 4 have two 2-friends, persons 1 and 3 have three
  2-friends. Person 2 is the most popular one - four 2-friends.


  <li class="example-even">
  <PRE>
  ["NNNNYNNNNN",
  "NNNNYNYYNN",
  "NNNYYYNNNN",
  "NNYNNNNNNN",
  "YYYNNNNNNY",
  "NNYNNNNNYN",
  "NYNNNNNYNN",
  "NYNNNNYNNN",
  "NNNNNYNNNN",
  "NNNNYNNNNN"]

  Returns: 8

  </PRE>
  <li class="example-odd">
  <PRE>
  ["NNNNYNNNNN",
  "NNNNYNYYNN",
  "NNNYYYNNNN",
  "NNYNNNNNNN",
  "YYYNNNNNNY",
  "NNYNNNNNYN",
  "NYNNNNNYNN",
  "NYNNNNYNNN",
  "NNNNNYNNNN",
  "NNNNYNNNNN"]

  Returns: 8
  </PRE>
  </ol>
copyright: |-
  This problem statement is the exclusive and proprietary property of
  TopCoder, Inc. Any unauthorized use or reproduction of this
  information without the prior written consent of TopCoder, Inc. is
  strictly prohibited. &copy;2006, TopCoder, Inc. All rights reserved.
