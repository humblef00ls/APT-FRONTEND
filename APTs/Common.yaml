filename: Common.py
name: Common
description: ''
lang: python
initial: "def count(a,b):\n\t\"\"\"\n\treturn the integer number of characters in common\n\tto Strings a and b as described below\n\t\"\"\"\n\t\n\t#you write code here"
problem: |-
  Two strings have a letter in common if it appears in both strings.  The
  position of letter is not important for it to be counted as common.
  Once a particular letter is counted as <EM>in common</EM>, it cannot be
  counted again.  For example, an <EM>o</EM> appearing twice in one word
  but only once in the other counts only as one letter in common. However,
  an <EM>o</EM> appearing twice in both words counts as two letters in common.


  Write a function that takes two strings and returns the number of
  letters they have in common.


  Hint: you will need some way to avoid counting a letter more than once
  if it is in common to both words, creating a list from the characters in
  a String may help since lists are mutable and strings are not.
constraints: |-
  <ul>
  <li>Strings a and b are the same length
  <li>Each string only contains characters in the range 'a'-'z'
  </ul>
examples: |-
  <ol>
  <li class="example-odd">
  <PRE>
  "horse"

  "mirth"
  </PRE>

  Returns:  2

  h and r in common.
  <li class="example-even">
  <PRE>
  "horse"

  "short"
  </pre>
  Returns:  4

  h,o,r, and s in common


  <li class="example-odd">
  <PRE>
  "horse"

  "seems"
  </PRE>
  Returns: 2

  <li class="example-even">
  <PRE>
  "horse"

  "moose"
  </PRE>
  Returns: 3
  </ol>
copyright: >-
  <a rel="license"

  href="http://creativecommons.org/licenses/by-sa/3.0/"><img

  alt="Creative Commons License" style="border-width:0"

  src="http://i.creativecommons.org/l/by-sa/3.0/88x31.png"

  /></a><br />This work

  is copyright &copy; Owen Astrachan and

  is licensed under a <a rel="license"
  href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons
  Attribution-Share Alike 3.0 Unported License</a>.
