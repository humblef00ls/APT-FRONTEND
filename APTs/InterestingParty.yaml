filename: InterestingParty.py
name: InterestingParty
description: ''
tags:
  - TAG1
  - TAG2
  - Required
lang: python
initial: "def bestInvitation(first,second):\n\t\"\"\"\n\treturn int based on string list\n\tparameters first and second\n\t\"\"\"\n\t\n\t# you write code here"
problem: |-
  Mr. White is a very versatile person - absolutely everything
  is interesting to him. Perhaps this is why he has many
  friends. Quite unfortunately, however, none of his friends
  are versatile at all. Each of them is interested only in two
  topics and refuses to talk about anything else. Therefore,
  each time Mr. White organizes a party, it's a big problem
  for him to decide whom to invite so that the party is
  interesting to everybody. Now that Mr. White has a lot of
  experience in organizing parties, he knows for sure that a
  party will be interesting if and only if there's a topic
  interesting to each of the invited friends.



  You will be given string lists <code>first</code> and
  <code>second</code>. The i-th friend of Mr. White is
  interested in topics <code>first[i]</code> and
  <code>second[i]</code>. Return the largest number of friends
  that Mr. White can invite to his party so that the party
  will be interesting.
constraints: |-
  <ul>
  <LI><code>first</code> will contain between 1 and 50
  elements, inclusive.

  <LI> <code>second</code> will contain the same number of
  elements as <code>first</code>.

  <LI>Each element of <code>first</code> and
  <code>second</code> will contain between 1 and 15
  characters, inclusive.

  <LI>Each character in <code>first</code> and
  <code>second</code> will be a lowercase letter ('a'-'z').

  <LI>For each valid i, <code>first</code>[i] will not be
  the same as <code>second</code>[i].
  </ul>
examples: |-
  <ol>
  <li class="example-odd">
  <PRE>
  first =  ["fishing", "gardening", "swimming", "fishing"]
  second = ["hunting", "fishing", "fishing", "biting"]

  Returns: 4

  </PRE>
  This is a very easy case since everybody is interested in
  "fishing".

  <li class="example-even">
  <PRE>
  first  = ["variety", "diversity", "loquacity", "courtesy"]
  second = ["talking", "speaking", "discussion", "meeting"]

  Returns: 1

  </PRE>
  Despite being interested in "talking", "speaking", "meeting"
  and so on, these people have nothing to talk about with each
  other.

  <li class="example-odd">
  <PRE>
  first =  ["snakes", "programming", "cobra", "monty"]
  second = ["python", "python", "anaconda", "python"]

  Returns: 3

  </PRE>
  Mr. White can invite friends 0, 1, 3 (0-based) and they will
  have an interesting evening talking about "python" (or at
  least Mr. White thinks so).

  <li class="example-even">
  <PRE>
  first =  ["t", "o", "p", "c", "o", "d", "e", "r", "s",
  "i", "n", "g", "l", "e", "r", "o", "u", "n",
  "d", "m", "a", "t", "c", "h", "f", "o", "u",
  "r", "n", "i"]

  second = ["n", "e", "f", "o", "u", "r", "j", "a", "n",
  "u", "a", "r", "y", "t", "w", "e", "n", "t",
  "y", "t", "w", "o", "s", "a", "t", "u", "r",
  "d", "a", "y"]

  Returns: 6
  </PRE>
  </ol>
copyright: |-
  This problem statement is the exclusive and proprietary
  property of TopCoder, Inc. Any unauthorized use or
  reproduction of this information without the prior written
  consent of TopCoder, Inc. is strictly
  prohibited. &copy;2010, TopCoder, Inc. All rights reserved.
