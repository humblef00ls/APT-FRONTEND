filename: PopularEnding.py
name: PopularEnding
description: ''
lang: python
initial: "def popular(phrase):\n\t'''\n\tphrase is a string of words\n\tReturn the sorted list of unique words that have the most\n\tpopular 3-character ending. Only consider words of length\n\t3 or more. Duplicate words only count once. Break ties with\n\tthe 3-character ending that comes last in alphabetical order.\n\t'''"
problem: |-
  Write the function named  <code>popular</code> that has one
  parameter, <code>phrase</code> is a string of lowercase words.
  This function returns
  a sorted  list of unique words that have the most popular 3-character
  ending. Only consider words of length three or more. Duplicate words only
  count once. Break ties with
  the 3-character ending that comes last in alphabetical order.
constraints: |-
  <ul>
  <li> phrase is a string of one or more words, each word is a String of
  one or more lowercase letters from a-z   </li>
  <li> words in phrase are separated by one blank </li>
   <LI> Only consider words of length three or more.  </li>
   <LI>
  If a word appears more than once in phrase, its ending is only
  counted once. </li>
   <LI>
  If there is more than one most-popular ending with the same number of
  words, break ties by choosing the
  the 3-character ending that comes last in alphabetical order. </li>
  </ul>
examples: |-
  <ol>
  <li class="example-odd">
  <PRE>
  phrase = "jingle bells in a single line"

  returns: ["jingle", "single"]

  The 3-char endings are "gle", "lls" and "ine". "gle" occurs twice and the
  others occur just once. The list of words that end in "gle" are returned
  in sorted order.

  </PRE>


  <li class="example-even">
  <PRE>
  phrase = "string wider icing order string wider icing order"

  returns: ["icing", "string"]

  There are two endings: "ing" and "der". Ignoring duplicate words, these
  endings both appear twice. "ing" appears later alphabetically, so a sorted
  list of unique words that end in "ing" is returned.
  </PRE>


  <li class="example-odd">
  <PRE>
  phrase = "bad bad fat cat"

  returns: ["fat"]

  There are three endings: "bad", "fat", and "cat". Each appear just once,
  and "fat" is the last of the endings in alphabetical order. Thus, words
  that end in "fat" are returned in sorted order, in this case, just one
  word.
  </PRE>



  <li class="example-even">
  <PRE>
  phrase = "a b c d go"

  returns: []

  There are no words with at least three characters.


  </PRE>


  <li class="example-odd">
  <PRE>
  phrase = "a problit for long loud strong song moonlit and sunlit
  by the gong and slit and split"


  returns: ["moonlit", "problit", "slit", "split", "sunlit"]

  The endings are: "lit", "for", "ong", "oud", "and", "the". Of those "lit"
  occurs 5 times, "ong" occurs 4 times. Each of "for", "oud", "and", and
  "the" occur just once (ignore duplicate words).
  </PRE>




  </ol>
copyright: >-
  <a rel="license"

  href="http://creativecommons.org/licenses/by-sa/3.0/"><img

  alt="Creative Commons License" style="border-width:0"

  src="http://i.creativecommons.org/l/by-sa/3.0/88x31.png"

  /></a><br />This work

  is copyright &copy; Susan Rodger and

  is licensed under a <a rel="license"
  href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons
  Attribution-Share Alike 3.0 Unported License</a>.
formName: popularending
